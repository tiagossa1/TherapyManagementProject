// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TherapyAPI.Entities;

namespace TherapyAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190301155905_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("TherapyAPI.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentDate");

                    b.Property<Guid>("AppointmentTypeId");

                    b.Property<Guid>("ClientId");

                    b.Property<Guid>("TherapistId");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("TherapyAPI.Models.AppointmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AppointmentType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e6dcae1-f0f4-4fb2-953e-09c6f6760270"),
                            Code = "FLORAIS",
                            Name = "Florais"
                        },
                        new
                        {
                            Id = new Guid("5310e626-e8bf-4ed9-bb5c-da2a0d32f00c"),
                            Code = "ACUPUNTURA",
                            Name = "Acupuntura"
                        },
                        new
                        {
                            Id = new Guid("cb9bc9ad-8c7b-419a-9b42-f13307dd459c"),
                            Code = "CROMOTERAPIA",
                            Name = "Cromoterapia"
                        },
                        new
                        {
                            Id = new Guid("97f79615-6ca9-4c82-9655-8cc952eb4aa3"),
                            Code = "MASSAGEM",
                            Name = "Massagem"
                        },
                        new
                        {
                            Id = new Guid("b35a10c3-0d43-4dc5-b1d4-a591fdd36b94"),
                            Code = "TERAPIACOMFLORES",
                            Name = "Terapia Com Flores"
                        },
                        new
                        {
                            Id = new Guid("bec6ac16-7932-48dc-903f-4f6512f1f1fb"),
                            Code = "FITOTERAPIA",
                            Name = "Fitoterapia"
                        },
                        new
                        {
                            Id = new Guid("7d593a97-370c-424b-a6d2-7a783841ba6a"),
                            Code = "REFLEXOLOGIA",
                            Name = "Reflexologia"
                        },
                        new
                        {
                            Id = new Guid("ca3dac30-56b5-4a2e-9549-095d007fa436"),
                            Code = "SHIATSU",
                            Name = "Shiatsu"
                        },
                        new
                        {
                            Id = new Guid("50593c90-2d39-4acc-bd78-a9804ef32237"),
                            Code = "REIKI",
                            Name = "Reiki"
                        });
                });

            modelBuilder.Entity("TherapyAPI.Models.Billing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppointmentId");

                    b.Property<bool>("Discount");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("TherapyAPI.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<char>("CivilStatus");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<char>("Gender");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("NIF")
                        .HasMaxLength(9);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Observations");

                    b.Property<string>("Occupation");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TherapyAPI.Models.Therapist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<char>("Gender");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("TherapyAPI.Models.Billing", b =>
                {
                    b.HasOne("TherapyAPI.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
