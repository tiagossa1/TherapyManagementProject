// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TherapyAPI.Entities;

namespace TherapyAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190226163515_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("TherapyAPI.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentDate");

                    b.Property<Guid>("AppointmentTypeId");

                    b.Property<Guid>("ClientId");

                    b.Property<Guid>("TherapistId");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("TherapyAPI.Models.AppointmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AppointmentType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5082063-1408-487e-9016-aebda09f77ad"),
                            Code = "FLORAIS",
                            Name = "Florais"
                        },
                        new
                        {
                            Id = new Guid("a7eb6971-0c90-453d-97ab-a1d546dd8e0b"),
                            Code = "ACUPUNTURA",
                            Name = "Acupuntura"
                        },
                        new
                        {
                            Id = new Guid("0d377695-87f0-4461-aaed-c3eb48eeb43d"),
                            Code = "CROMOTERAPIA",
                            Name = "Cromoterapia"
                        },
                        new
                        {
                            Id = new Guid("20f2d903-59ca-4334-9453-576b810230ff"),
                            Code = "MASSAGEM",
                            Name = "Massagem"
                        },
                        new
                        {
                            Id = new Guid("0ec4fc11-799b-4912-ba5c-5a30856fb236"),
                            Code = "TERAPIACOMFLORES",
                            Name = "Terapia Com Flores"
                        },
                        new
                        {
                            Id = new Guid("c79e2d78-5436-4b42-a3ed-3018214019bf"),
                            Code = "FITOTERAPIA",
                            Name = "Fitoterapia"
                        },
                        new
                        {
                            Id = new Guid("059adb02-1a31-4283-96f8-05085d744f8d"),
                            Code = "REFLEXOLOGIA",
                            Name = "Reflexologia"
                        },
                        new
                        {
                            Id = new Guid("f8d7306e-a63c-426a-bfd2-a405b26e2316"),
                            Code = "SHIATSU",
                            Name = "Shiatsu"
                        },
                        new
                        {
                            Id = new Guid("29fa3162-9cf7-46f7-b988-927dc0a29171"),
                            Code = "REIKI",
                            Name = "Reiki"
                        });
                });

            modelBuilder.Entity("TherapyAPI.Models.Billing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppointmentId");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("TherapyAPI.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<char>("CivilStatus");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<char>("Gender");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("NIF")
                        .HasMaxLength(9);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Observations");

                    b.Property<string>("Occupation");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TherapyAPI.Models.Therapist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<char>("Gender");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("TherapyAPI.Models.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientId");

                    b.Property<string>("PreferLanguage");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("TherapyAPI.Models.Billing", b =>
                {
                    b.HasOne("TherapyAPI.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
