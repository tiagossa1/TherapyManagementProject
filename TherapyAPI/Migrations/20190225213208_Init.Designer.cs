// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TherapyAPI.Entities;

namespace TherapyAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20190225213208_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("TherapyAPI.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentDate");

                    b.Property<Guid>("AppointmentTypeId");

                    b.Property<Guid>("ClientId");

                    b.Property<Guid>("TherapistId");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("TherapyAPI.Models.AppointmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AppointmentType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0209baaa-cc0d-47f6-8d79-0ee02b6a62e0"),
                            Code = "FLORAIS",
                            Name = "Florais"
                        },
                        new
                        {
                            Id = new Guid("c8014002-c739-4676-be98-e16f4170654c"),
                            Code = "ACUPUNTURA",
                            Name = "Acupuntura"
                        },
                        new
                        {
                            Id = new Guid("42e0cf8b-f140-46d8-85eb-b395eec574de"),
                            Code = "CROMOTERAPIA",
                            Name = "Cromoterapia"
                        },
                        new
                        {
                            Id = new Guid("9bd2fa11-d0e9-4fdf-84d3-9a9e72d50585"),
                            Code = "MASSAGEM",
                            Name = "Massagem"
                        },
                        new
                        {
                            Id = new Guid("4e257c5a-12fb-4d75-b1f1-93ddb9453582"),
                            Code = "TERAPIACOMFLORES",
                            Name = "Terapia Com Flores"
                        },
                        new
                        {
                            Id = new Guid("993375f1-4503-437e-9402-3edbb311b46d"),
                            Code = "FITOTERAPIA",
                            Name = "Fitoterapia"
                        },
                        new
                        {
                            Id = new Guid("0784c86a-78d0-4883-8b31-3b2adf943b8c"),
                            Code = "REFLEXOLOGIA",
                            Name = "Reflexologia"
                        },
                        new
                        {
                            Id = new Guid("354ed255-443b-4ca4-96d2-250b625e503f"),
                            Code = "SHIATSU",
                            Name = "Shiatsu"
                        },
                        new
                        {
                            Id = new Guid("71822333-5a68-47cc-97c3-9d59ead8b495"),
                            Code = "REIKI",
                            Name = "Reiki"
                        });
                });

            modelBuilder.Entity("TherapyAPI.Models.Billing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppointmentId");

                    b.Property<Guid>("ClientId");

                    b.Property<decimal>("Price");

                    b.Property<Guid>("TherapistId");

                    b.HasKey("Id");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("TherapyAPI.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<char>("CivilStatus");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<char>("Gender");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("NIF")
                        .HasMaxLength(9);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Observations");

                    b.Property<string>("Occupation");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TherapyAPI.Models.Therapist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<char>("Gender");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("TherapyAPI.Models.UserSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientId");

                    b.Property<string>("PreferLanguage");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
